#include "pandoramodules_microboone.fcl"
#include "external_event_building.fcl"
#include "flash_neutrino_id.fcl"
###################################################################################

#include "services_microboone.fcl"
#include "photpropservices_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"

StoreChi2: {

    module_type: "StoreFlashMatchChi2"
    FlashProducer: @local::flash_neutrino_id_tool.FlashLabel
    PandoraProducer: "pandora"
    SpacePointProducer: "pandora"
    BeamWindowStart: @local::flash_neutrino_id_tool.BeamWindowStartTime
    BeamWindowEnd: @local::flash_neutrino_id_tool.BeamWindowEndTime
    MaxTotalPE: @local::flash_neutrino_id_tool.BeamFlashPEThreshold
    ChargeToNPhotonsTrack: @local::flash_neutrino_id_tool.ChargeToNPhotonsTrack
    ChargeToNPhotonsShower: @local::flash_neutrino_id_tool.ChargeToNPhotonsShower
    PMTChannelCorrection: @local::flash_neutrino_id_tool.PMTChannelCorrection

    FlashMatchConfig:         @local::flash_neutrino_id_tool.FlashMatchConfig

}

#StoreChi2.FlashMatchConfig.FlashMatchManager.AllowReuseFlash: true
#StoreChi2.FlashMatchConfig.QLLMatch.NormalizeHypothesis:      false
#StoreChi2.FlashMatchConfig.FlashMatchManager.MatchAlgo: "Chi2Match"
#StoreChi2.FlashMatchConfig.Chi2Match:
#{
#  PEPenaltyThreshold: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
#}


services:
{
  scheduler:               {defaultExceptions: false}
  TFileService:            {fileName: "SliceID_tree.root"}

  @table::microboone_services_reco
  @table::microboone_simulation_services

  TimeTracker:              @local::microboone_time_tracker
  MemoryTracker:            @local::microboone_memory_tracker
  message:                  @local::microboone_message_services_prod_debug
  FileCatalogMetadata:      @local::art_file_catalog_mc
  SpaceCharge:              @local::microboone_spacecharge
  DetectorPropertiesService:@local::microboone_detproperties
  LArProperties:            @local::microboone_properties
  DetectorClocksService:    @local::microboone_detectorclocks
  PhotonVisibilityService:  @local::microboone_photonvisibilityservice
  PmtGainService:           @local::PMTService
}

# Configuration
services.SpaceCharge.EnableCorrSCE:       true
services.SpaceCharge.EnableSimEfieldSCE:  true
services.SpaceCharge.EnableSimSpatialSCE: true
services.DetectorClocksService.InheritClockConfig:                         false
services.DetectorClocksService.TriggerOffsetTPC:                          -0.400e3

process_name: StoreChi2

source:
{
  module_type: RootInput
  maxEvents:  -1
  saveMemoryObjectThreshold: 0
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName: "%ifb_%tc_flashEventBuild.root"
   dataTier: "reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
 }
}

physics:
{

 producers:
 {
    # SliceID
    flashmatch: @local::StoreChi2
 }
 
 analyzers: 
 {

   anachi2: {
            module_type: "AnalyzeFlashMatchChi2"
            PFPproducer: "pandora"
            T0producer: "flashmatch"
            }
 }

 reco: [flashmatch]
 ana:  [anachi2]

 stream1:   [ out1 ]
 #trigger_paths: [ prod ]
 end_paths: [ stream1, ana ]
}


