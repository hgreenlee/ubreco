#include "services_microboone.fcl"

process_name: MuCSMCFilter

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_gen_services
}

#Start each new event with an empty event.
source:
{
  module_type: RootInput
  maxEvents:  -1         # Number of events to create
}

physics:
{

 producers:
 {
 }

filters:
{
stopmufilter: {
           module_type: "StopMuMCFilter"
           MCPproducer: "largeant"
           TrkLen:      150.
           }
}

 simulate: [ stopmufilter ]
 stream1:  [ out1 ]
 trigger_paths: [simulate]
 end_paths:     [stream1]
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "prodMuCS_Single_Muons_%tc_gen.root"
   dataTier:    "generated"
   compressionLevel: 1
   SelectEvents: [simulate]
 }
}
